# ðŸ“˜ Project: Apache Web Server with Custom HTML in Docker

## ðŸ”¹ Overview

This project builds a Docker image based on **Ubuntu** that installs **Apache HTTP Server** and serves a custom `index.html` page. The container runs Apache in the foreground and maps port **80 (container)** to **7070 (host)** so the web page is accessible from the host machine.

---

## ðŸ”¹ Project Structure

```
project-2/
â”œâ”€â”€ Dockerfile
â””â”€â”€ index.html
```

* **Dockerfile** â†’ Instructions to build the image.
* **index.html** â†’ Custom web page to be served by Apache.

---

## ðŸ”¹ Dockerfile

```dockerfile
FROM ubuntu:latest
RUN apt-get update && apt-get install -y apache2
COPY index.html /var/www/html/index.html
EXPOSE 80
CMD ["apache2ctl", "-D", "FOREGROUND"]
```

### Explanation:

* `FROM ubuntu:latest` â†’ Base image.
* `RUN apt-get update && apt-get install -y apache2` â†’ Install Apache.
* `COPY index.html /var/www/html/index.html` â†’ Copy custom HTML file into Apacheâ€™s default web root.
* `EXPOSE 80` â†’ Document that the container listens on port 80.
* `CMD ["apache2ctl", "-D", "FOREGROUND"]` â†’ Run Apache in foreground (keeps container alive).

---

## ðŸ”¹ Build the Image

From inside the project directory:

```bash
sudo docker build -t my-apache-app .
```

* `-t my-apache-app` â†’ Names the image `my-apache-app`.
* `.` â†’ Current directory as build context (so it can find Dockerfile + index.html).

---

## ðŸ”¹ Run the Container

```bash
sudo docker run -dit -p 7070:80 --name webserver my-apache-app
```

* `-d` â†’ Detached mode (runs in background).
* `-i -t` â†’ Interactive with terminal (useful for exec later).
* `-p 7070:80` â†’ Maps host port **7070** â†’ container port **80**.
* `--name webserver` â†’ Easy-to-use container name.

---

## ðŸ”¹ Test the Setup

Open browser on host machine:

```
http://localhost:7070
```

ðŸ‘‰ You should see the content of `index.html`.

---

## ðŸ”¹ Useful Commands

* **List containers**:

  ```bash
  sudo docker ps -a
  ```
* **Access running container shell**:

  ```bash
  sudo docker exec -it webserver bash
  ```
* **Check logs**:

  ```bash
  sudo docker logs webserver
  ```
* **Stop container**:

  ```bash
  sudo docker stop webserver
  ```
* **Start container again**:

  ```bash
  sudo docker start webserver
  ```

---

## ðŸ”¹ Notes

* `index.html` changes require **rebuilding the image** unless volumes are used.
* To update without rebuild, you can copy a new file:

  ```bash
  sudo docker cp index.html webserver:/var/www/html/index.html
  ```

---

âœ… With this setup, your Apache web server in Docker serves your custom HTML on `http://localhost:7070`.

---
